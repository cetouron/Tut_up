{"remainingRequest":"/Users/cestdrique/projetM2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cestdrique/projetM2/src/components/register/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cestdrique/projetM2/src/components/register/Register.vue","mtime":1612717838031},{"path":"/Users/cestdrique/projetM2/node_modules/babel-loader/lib/index.js","mtime":1611532373000},{"path":"/Users/cestdrique/projetM2/node_modules/vuetify-loader/lib/loader.js","mtime":1611532373000},{"path":"/Users/cestdrique/projetM2/node_modules/cache-loader/dist/cjs.js","mtime":1611532373000},{"path":"/Users/cestdrique/projetM2/node_modules/vue-loader/lib/index.js","mtime":1611532373000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { mapState, mapMutations } from \"vuex\";\n\n  export default {\n    data: () => ({\n     links: [{text: 'Home', to: '/'},{text: 'Connexion', to: '/connexion'},{text: 'Enregistrer', to: '/inscription'}],\n      valid: true,\n      password: '',\n      passwordRules: [\n        v => !!v || 'password is required',\n        v => (v && v.length <= 20) || 'password must be less than 20characters',\n      ],\n      password2: '',\n      password2Rules: [\n        v => !!v || 'password is required',\n        v => (v && v.length <= 20) || 'password must be less than 20characters',\n      ],\n      email: '',\n      emailRules: [\n        v => !!v || 'E-mail is required',\n        v => /.+@.+\\..+/.test(v) || 'E-mail must be valid',\n      ],\n      \n    }),\n    computed: {\n    ...mapState([\"pfl\"]),\n  },\n    methods: {\n      validate () {\n        if (this.profil == 'eleve') {\n          this.$store.state.pfl='Eleve',\n          this.$router.push({name: 'profilEleve'})\n        }\n        if (this.profil == 'tuteur') {\n          this.$store.state.pfl='Tuteur',\n          this.$router.push({name: 'profilTuteur'})\n        }\n      },\n      reset () {\n        this.$refs.form.reset()\n      },\n      resetValidation () {\n        this.$refs.form.resetValidation()\n      },\n    },\n    props: {\n    },\n  }\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/components/register","sourcesContent":["<template>\n <div>\n    <v-breadcrumbs :items=\"links\">\n      <template v-slot:divider>\n        <v-icon>mdi-chevron-right</v-icon>\n      </template>\n    </v-breadcrumbs>\n   <h1>Création d'un compte</h1>\n  <v-card\n    class=\"mx-auto\"\n    max-width=\"500\"\n    outlined\n  >\n  <div class=\"text-center mx-16\">\n    <v-img \n      src=\"https://simpleicon.com/wp-content/uploads/add-user-256x256.png\"\n      height=\"200px\"\n      width=\"200px\"\n      \n    ></v-img>\n   </div>\n    <v-form\n    ref=\"form\"\n    v-model=\"valid\"\n    lazy-validation\n  >\n\n    <v-text-field\n      v-model=\"email\"\n      :rules=\"emailRules\"\n      label=\"E-mail\"\n       prepend-icon=\"mdi-email\"\n       color=\"white\"\n       background-color=\"white\"\n      required\n    ></v-text-field>\n\n    <v-text-field\n      v-model=\"password\"\n      type=\"password\"\n      :counter=\"20\"\n      :rules=\"passwordRules\"\n      label=\"Mot de passe\"\n      prepend-icon=\"mdi-lock\"\n       color=\"white\"\n       background-color=\"white\"\n      required\n    ></v-text-field>\n\n    <v-text-field\n      v-model=\"password2\"\n      type=\"password\"\n      :counter=\"20\"\n      :rules=\"passwor2dRules\"\n      label=\"Confirmer le mot de passe\"\n      prepend-icon=\"mdi-lock\"\n       color=\"white\"\n       background-color=\"white\"\n      required\n    ></v-text-field>\n\n         <v-btn-toggle v-model=\"profil\" tile color=\"deep-white accent-3\" group>\n          <v-btn value=\"eleve\"> Elève </v-btn>\n\n          <v-btn value=\"tuteur\"> Tuteur </v-btn>\n        </v-btn-toggle>\n\n    <v-btn block\n      :disabled=\"!valid\"\n      color=\"success\"\n      class=\"mr-4\"\n      @click=\"validate\"\n    >\n      Valider\n    </v-btn>\n   <br />\n\n    <v-btn block\n      color=\"warning\"\n      @click=\"reset\"\n    >\n      Annuler\n    </v-btn>\n   \n  \n  </v-form>\n  </v-card>\n\n\n  <br />\n   </div>\n</template>\n\n<script>\n\nimport { mapState, mapMutations } from \"vuex\";\n\n  export default {\n    data: () => ({\n     links: [{text: 'Home', to: '/'},{text: 'Connexion', to: '/connexion'},{text: 'Enregistrer', to: '/inscription'}],\n      valid: true,\n      password: '',\n      passwordRules: [\n        v => !!v || 'password is required',\n        v => (v && v.length <= 20) || 'password must be less than 20characters',\n      ],\n      password2: '',\n      password2Rules: [\n        v => !!v || 'password is required',\n        v => (v && v.length <= 20) || 'password must be less than 20characters',\n      ],\n      email: '',\n      emailRules: [\n        v => !!v || 'E-mail is required',\n        v => /.+@.+\\..+/.test(v) || 'E-mail must be valid',\n      ],\n      \n    }),\n    computed: {\n    ...mapState([\"pfl\"]),\n  },\n    methods: {\n      validate () {\n        if (this.profil == 'eleve') {\n          this.$store.state.pfl='Eleve',\n          this.$router.push({name: 'profilEleve'})\n        }\n        if (this.profil == 'tuteur') {\n          this.$store.state.pfl='Tuteur',\n          this.$router.push({name: 'profilTuteur'})\n        }\n      },\n      reset () {\n        this.$refs.form.reset()\n      },\n      resetValidation () {\n        this.$refs.form.resetValidation()\n      },\n    },\n    props: {\n    },\n  }\n</script>"]}]}